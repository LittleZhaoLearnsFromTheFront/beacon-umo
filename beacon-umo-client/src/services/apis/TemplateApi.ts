// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * beacon-umo-client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    InlineResponse2002,
    InlineResponse2002FromJSON,
    InlineResponse2002ToJSON,
} from '../models';

export interface ApiClientTemplateGetRequest {
    page: number;
    limit: number;
}

/**
 * 
 */
export class TemplateApi extends runtime.BaseAPI {

    /**
     * 获取模版列表
     */
    async apiClientTemplateGetRaw(requestParameters: ApiClientTemplateGetRequest): Promise<runtime.ApiResponse<InlineResponse2002>> {
        if (requestParameters.page === null || requestParameters.page === undefined) {
            throw new runtime.RequiredError('page','Required parameter requestParameters.page was null or undefined when calling apiClientTemplateGet.');
        }

        if (requestParameters.limit === null || requestParameters.limit === undefined) {
            throw new runtime.RequiredError('limit','Required parameter requestParameters.limit was null or undefined when calling apiClientTemplateGet.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        if (requestParameters.page !== undefined) {
            queryParameters['page'] = requestParameters.page;
        }

        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/client/template`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => InlineResponse2002FromJSON(jsonValue));
    }

    /**
     * 获取模版列表
     */
    async apiClientTemplateGet(page: number, limit: number): Promise<InlineResponse2002> {
        const response = await this.apiClientTemplateGetRaw({ page: page, limit: limit });
        return await response.value();
    }

}
