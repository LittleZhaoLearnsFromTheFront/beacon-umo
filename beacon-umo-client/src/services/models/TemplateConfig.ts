// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * beacon-umo-client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    TemplateConfigGridBar,
    TemplateConfigGridBarFromJSON,
    TemplateConfigGridBarFromJSONTyped,
    TemplateConfigGridBarToJSON,
    TemplateConfigSwiper,
    TemplateConfigSwiperFromJSON,
    TemplateConfigSwiperFromJSONTyped,
    TemplateConfigSwiperToJSON,
} from './';

/**
 * 
 * @export
 * @interface TemplateConfig
 */
export interface TemplateConfig {
    /**
     * 
     * @type {Array<TemplateConfigSwiper>}
     * @memberof TemplateConfig
     */
    swiper?: Array<TemplateConfigSwiper>;
    /**
     * 
     * @type {Array<TemplateConfigGridBar>}
     * @memberof TemplateConfig
     */
    gridBar?: Array<TemplateConfigGridBar>;
}

export function TemplateConfigFromJSON(json: any): TemplateConfig {
    return TemplateConfigFromJSONTyped(json, false);
}

export function TemplateConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): TemplateConfig {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'swiper': !exists(json, 'swiper') ? undefined : ((json['swiper'] as Array<any>).map(TemplateConfigSwiperFromJSON)),
        'gridBar': !exists(json, 'gridBar') ? undefined : ((json['gridBar'] as Array<any>).map(TemplateConfigGridBarFromJSON)),
    };
}

export function TemplateConfigToJSON(value?: TemplateConfig | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'swiper': value.swiper === undefined ? undefined : ((value.swiper as Array<any>).map(TemplateConfigSwiperToJSON)),
        'gridBar': value.gridBar === undefined ? undefined : ((value.gridBar as Array<any>).map(TemplateConfigGridBarToJSON)),
    };
}


